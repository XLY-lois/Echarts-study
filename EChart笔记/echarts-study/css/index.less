// css初始化
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}
li{
    list-style: none;
}

/* 声明字体*/
@font-face {
    font-family: electronicFont;
    src: url(../font/DS-DIGIT.TTF);
}

// #box{
//     width: 1rem;
//     height: 1rem;
//     background-color: pink;
// }
body{
    background: url(../imgs/timg.jpg);
    background-repeat: no-repeat;   //不重复
}
header{
    position: relative;
    height: 1.25rem;
    background-color: rgba(25, 26, 95, 0.664);
    h1{
        font-size: .475rem;
        color: white;
        line-height: 1rem;
        text-align: center;
    }
    .showTime{
        position: absolute;
        right: .375rem;
        line-height: .9375rem;
        font-size: .25rem;
        color: white;
        top: 0;
    }
}

// 页面主体盒子
.mianbox{
    display: flex;
    min-width: 12.8rem;
    max-width: 24rem;
    height: 3.75rem;
    // background-color: pink;
    margin: 0 atuo;
    padding: .125rem .125rem 0;
    .column{
        flex: 3;
        &:nth-child(2){
            // 第二个盒子占5份
            flex:5;
            margin: 0 .1875rem .125rem;
        }
    }
    .panel{
        height: 3.875rem;
        background:  rgba(33, 35, 117, 0.664);
        border: 1px solid rgba(34, 24, 78, 0.671);
        padding: 0 .1875rem .5rem;
        margin-bottom: .1875rem;
        h2{
            height: .6rem;
            color:white;
            line-height: .6rem;
            text-align: center;
            font-size: .25rem;
            font-weight: 400;
            a{
                color: #fff;
                text-decoration: none;
                margin: 0 10px;
            }
        }
        .charts{
            height: 3rem;
            // background-color: pink;
        }
    }
// 数字模块
    .no{
        background-color: rgba(31, 32, 117, 0.568);
        padding: .1875rem;
        .no-hd{
            border: 1px solid rgba(48, 50, 134, 0.363);
            ul{
                display: flex;
                li{
                    flex: 1;
                    height: 1rem;
                    font-size: .875rem;
                    color: rgb(245, 248, 80);
                    text-align: center;
                    font-family: electronicFont;
                }
            }
        }
        .no-bd{
            ul{
                display: flex;
                li{
                    flex: 1;
                    font-size: .25rem;
                    height: .5rem;
                    line-height: .5rem;
                    color: white;
                    text-align: center;
                    padding-top: .1rem;
                }
            }
        }
    }
}

//地图模块
.map{
    position: relative;
    height: 10.125rem;
    .map1{
        height: 6.475rem;
        width: 6.475rem;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%,-50%);
        background: url(../imgs/earth.png);
        background-size:cover;
        opacity: 0.3;
    }
    .map2{
        position: absolute;
        top: 50%;
        left:50%;
        transform: translate(-50%,-50%);
        height: 8.0375rem;
        width: 8.0375rem;
        background: url(../imgs/map2.png);
        background-size:cover;
        // 调用动画
        animation: rotate1 15s linear infinite;
        opacity: 0.5;

    }
    .map3{
        position: absolute;
        top: 50%;
        left:50%;
        transform: translate(-50%,-50%);
        height: 7.075rem;
        width: 7.075rem;
        background: url(../imgs/map3.png);
        background-size:cover;
        // 调用动画
        animation: rotate2 10s linear infinite;
        opacity: 0.5;

    }
    .chart{
        position: absolute;
        top: 0;
        left: 0;
        // background-color: pink;
        width: 100%;
        height: 10.125rem;
    }


    // 定义动画 旋转
    // 逆时针
    @keyframes rotate1{
        from{
            transform: translate(-50%,-50%) rotate(0deg);
        }
        to{
            transform: translate(-50%,-50%) rotate(360deg);
        }
    }
    // 顺时针
    @keyframes rotate2{
        from{
            transform: translate(-50%,-50%) rotate(360deg);
        }
        to{
            transform: translate(-50%,-50%) rotate(0deg);
        }
    }
}